# Supabase Configuration
# Copy this file to .env.supabase and fill in your values

# PostgreSQL Database
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your-super-secret-postgres-password

# JWT Secret (generate with: openssl rand -base64 32)
JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long

# JWT Expiry (in seconds)
JWT_EXPIRY=3600

# Supabase URLs
SUPABASE_PUBLIC_URL=https://supabase.stratomai.com
SITE_URL=https://stratomai.com
ADDITIONAL_REDIRECT_URLS=http://localhost:3000,https://stratomai.com

# Supabase Keys (generate with the script below)
SUPABASE_ANON_KEY=your-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key

# Secret Key Base (generate with: openssl rand -base64 32)
SECRET_KEY_BASE=your-super-secret-key-base

# Email Signup
ENABLE_EMAIL_SIGNUP=true
ENABLE_EMAIL_AUTOCONFIRM=false
DISABLE_SIGNUP=false

# Phone Signup
ENABLE_PHONE_SIGNUP=false
ENABLE_PHONE_AUTOCONFIRM=false

# SMTP Configuration (for emails)
SMTP_ADMIN_EMAIL=admin@stratomai.com
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password
SMTP_SENDER_NAME=Stratomai

# Mailer URL Paths
MAILER_URLPATHS_INVITE=/auth/v1/verify
MAILER_URLPATHS_CONFIRMATION=/auth/v1/verify
MAILER_URLPATHS_RECOVERY=/auth/v1/verify
MAILER_URLPATHS_EMAIL_CHANGE=/auth/v1/verify

# PostgREST Schemas
PGRST_DB_SCHEMAS=public,storage,graphql_public

# ImgProxy
IMGPROXY_ENABLE_WEBP_DETECTION=true

# --- How to generate Supabase Keys ---
# Run this in Node.js to generate your keys:
#
# const jose = require('jose')
# const secret = 'YOUR_JWT_SECRET_HERE'
#
# // Anon Key
# const anonToken = await new jose.SignJWT({ role: 'anon' })
#   .setProtectedHeader({ alg: 'HS256' })
#   .setIssuedAt()
#   .setExpirationTime('10y')
#   .sign(new TextEncoder().encode(secret))
#
# // Service Role Key
# const serviceToken = await new jose.SignJWT({ role: 'service_role' })
#   .setProtectedHeader({ alg: 'HS256' })
#   .setIssuedAt()
#   .setExpirationTime('10y')
#   .sign(new TextEncoder().encode(secret))
